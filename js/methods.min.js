"use strict";

//methods

function getfName() {
    var str = $("#fname").val();
    return str.charAt(0).toUpperCase() + str.slice(1);
};

function getlName() {
    var str = $("#lname").val();
    return str.charAt(0).toUpperCase() + str.slice(1);
};

function areValues() {
    if (id && fname && lname && department && image && email && phone) {
        $("#submit").prop("disabled", false);
    } else {
        if (!id || !fname || !lname || !department || !image || !email || phone) {
            $("#submit").prop("disabled", true);
        }
    }
};

function Employee() {
    var employee = {
        id: id,
        fname: fname,
        lname: lname,
        email: email,
        department: department,
        phone: phone,
        image: "/images/" + image,
        description: description
    };

    return employee;
}

function injectEmployee(employeeInput) {
    var url = "images/" + image;
    var newEmployee = "<div class=\"item-container\">\n                                <div class=\"item\">\n                                    <div class=\"overlay\">\n                                        <div class=\"profile-image-container\">\n                                            <img src=" + url + ">\n                                        </div>\n                                        <h3>" + fname + "</h3>\n                                        <h3 class=\"lname\">" + lname + "</h3>\n                                        <h4>" + department + "</h4>\n                                        <h5>" + email + "</h5>\n                                        <h6>" + phone + "</h6>\n                                        <button class=\"details\">details</button>\n                                    </div>\n                                    <img src=" + url + ">\n                                </div>\n                                <input type=\"hidden\" value=" + employeeInput.id + ">\n                            </div>";

    $(".row").append(newEmployee);
};

function getEmployeeData(modalId) {
    var employeeData;

    for (var i = 0; i < employeeList.length; i++) {
        if (employeeList[i].id === modalId) {
            employeeData = employeeList[i];
        }
    }
    return employeeData;
}

function openModal(modalId) {
    var employeeData = getEmployeeData(modalId);
    console.log(employeeData);

    var modalEmployee = "<section class=\"modal\">\n                <div class=\"card\">\n                    <div class=\"image-container\">\n                        <img src=" + employeeData.image + ">\n                    </div>\n                    <div class=\"employee-information\">\n                        <h2 class=\"modal-fname\">" + employeeData.fname + "</h2>\n                        <h2 class=\"modal-lname\">" + employeeData.lname + "</h2>\n                        <h3>" + employeeData.department + "</h3>\n                        <h3>" + employeeData.email + "</h3>\n                        <h3>" + employeeData.phone + "</h3>\n                        <p>" + employeeData.description + "</p>\n                        <div class=\"icons\">\n                        \t<button class=\"action-btn export\">export</button>\n                        \t<button class=\"action-btn print\">print</button>\n                        \t<button class=\"action-btn delete\">delete</button>\n                        </div>\n                    </div>\n                    \n                </div>\n                <button id=\"close-modal\">close</button>\n            </section>";

    $("main").append(modalEmployee);
};

function closeModal() {
    $("section").remove(".modal");
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGhvZHMuanMiXSwibmFtZXMiOlsiZ2V0Zk5hbWUiLCJzdHIiLCIkIiwidmFsIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsImdldGxOYW1lIiwiYXJlVmFsdWVzIiwiaWQiLCJmbmFtZSIsImxuYW1lIiwiZGVwYXJ0bWVudCIsImltYWdlIiwiZW1haWwiLCJwaG9uZSIsInByb3AiLCJFbXBsb3llZSIsImVtcGxveWVlIiwiZGVzY3JpcHRpb24iLCJpbmplY3RFbXBsb3llZSIsImVtcGxveWVlSW5wdXQiLCJ1cmwiLCJuZXdFbXBsb3llZSIsImFwcGVuZCIsImdldEVtcGxveWVlRGF0YSIsIm1vZGFsSWQiLCJlbXBsb3llZURhdGEiLCJpIiwiZW1wbG95ZWVMaXN0IiwibGVuZ3RoIiwib3Blbk1vZGFsIiwiY29uc29sZSIsImxvZyIsIm1vZGFsRW1wbG95ZWUiLCJjbG9zZU1vZGFsIiwicmVtb3ZlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBLFNBQVNBLFFBQVQsR0FBb0I7QUFDaEIsUUFBSUMsTUFBTUMsRUFBRSxRQUFGLEVBQVlDLEdBQVosRUFBVjtBQUNBLFdBQU9GLElBQUlHLE1BQUosQ0FBVyxDQUFYLEVBQWNDLFdBQWQsS0FBOEJKLElBQUlLLEtBQUosQ0FBVSxDQUFWLENBQXJDO0FBRUg7O0FBRUQsU0FBU0MsUUFBVCxHQUFvQjtBQUNoQixRQUFJTixNQUFNQyxFQUFFLFFBQUYsRUFBWUMsR0FBWixFQUFWO0FBQ0EsV0FBT0YsSUFBSUcsTUFBSixDQUFXLENBQVgsRUFBY0MsV0FBZCxLQUE4QkosSUFBSUssS0FBSixDQUFVLENBQVYsQ0FBckM7QUFFSDs7QUFFRCxTQUFTRSxTQUFULEdBQXFCO0FBQ2pCLFFBQUlDLE1BQU1DLEtBQU4sSUFBZUMsS0FBZixJQUF3QkMsVUFBeEIsSUFBc0NDLEtBQXRDLElBQStDQyxLQUEvQyxJQUF3REMsS0FBNUQsRUFBbUU7QUFDL0RiLFVBQUUsU0FBRixFQUFhYyxJQUFiLENBQWtCLFVBQWxCLEVBQThCLEtBQTlCO0FBQ0gsS0FGRCxNQUVPO0FBQ0gsWUFBSSxDQUFDUCxFQUFELElBQU8sQ0FBQ0MsS0FBUixJQUFpQixDQUFDQyxLQUFsQixJQUEyQixDQUFDQyxVQUE1QixJQUEwQyxDQUFDQyxLQUEzQyxJQUFvRCxDQUFDQyxLQUFyRCxJQUE4REMsS0FBbEUsRUFBeUU7QUFDckViLGNBQUUsU0FBRixFQUFhYyxJQUFiLENBQWtCLFVBQWxCLEVBQThCLElBQTlCO0FBQ0g7QUFDSjtBQUNKOztBQUVELFNBQVNDLFFBQVQsR0FBb0I7QUFDaEIsUUFBSUMsV0FBVztBQUNYVCxjQURXO0FBRVhDLG9CQUZXO0FBR1hDLG9CQUhXO0FBSVhHLG9CQUpXO0FBS1hGLDhCQUxXO0FBTVhHLG9CQU5XO0FBT1hGLGVBQU8sYUFBYUEsS0FQVDtBQVFYTTtBQVJXLEtBQWY7O0FBV0EsV0FBT0QsUUFBUDtBQUNIOztBQUVELFNBQVNFLGNBQVQsQ0FBd0JDLGFBQXhCLEVBQXVDO0FBQ25DLFFBQUlDLE1BQU0sWUFBWVQsS0FBdEI7QUFDQSxRQUFJVSw0U0FJK0NELEdBSi9DLHVHQU1zQ1osS0FOdEMsMkVBT29EQyxLQVBwRCwyREFRc0NDLFVBUnRDLDJEQVNzQ0UsS0FUdEMsMkRBVXNDQyxLQVZ0Qyw0TEFhdUNPLEdBYnZDLGdIQWVxREQsY0FBY1osRUFmbkUsMENBQUo7O0FBa0JBUCxNQUFFLE1BQUYsRUFBVXNCLE1BQVYsQ0FBaUJELFdBQWpCO0FBQ0g7O0FBRUQsU0FBU0UsZUFBVCxDQUF5QkMsT0FBekIsRUFBa0M7QUFDakMsUUFBSUMsWUFBSjs7QUFFQSxTQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUMsYUFBYUMsTUFBakMsRUFBeUNGLEdBQXpDLEVBQThDO0FBQzdDLFlBQUlDLGFBQWFELENBQWIsRUFBZ0JuQixFQUFoQixLQUF1QmlCLE9BQTNCLEVBQW9DO0FBQ25DQywyQkFBZUUsYUFBYUQsQ0FBYixDQUFmO0FBQ0E7QUFDRDtBQUNELFdBQU9ELFlBQVA7QUFFQTs7QUFFRCxTQUFTSSxTQUFULENBQW1CTCxPQUFuQixFQUE0QjtBQUMzQixRQUFJQyxlQUFlRixnQkFBZ0JDLE9BQWhCLENBQW5CO0FBQ0FNLFlBQVFDLEdBQVIsQ0FBWU4sWUFBWjs7QUFFRyxRQUFJTyw0S0FHMkJQLGFBQWFkLEtBSHhDLG1KQU0wQ2MsYUFBYWpCLEtBTnZELGlFQU8wQ2lCLGFBQWFoQixLQVB2RCwyQ0FRc0JnQixhQUFhZixVQVJuQywyQ0FTc0JlLGFBQWFiLEtBVG5DLDJDQVVzQmEsYUFBYVosS0FWbkMsMENBV3FCWSxhQUFhUixXQVhsQyxnZUFBSjs7QUF1QkFqQixNQUFFLE1BQUYsRUFBVXNCLE1BQVYsQ0FBaUJVLGFBQWpCO0FBQ0g7O0FBSUQsU0FBU0MsVUFBVCxHQUFzQjtBQUNsQmpDLE1BQUUsU0FBRixFQUFha0MsTUFBYixDQUFvQixRQUFwQjtBQUNIIiwiZmlsZSI6Im1ldGhvZHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9tZXRob2RzXG5cbmZ1bmN0aW9uIGdldGZOYW1lKCkge1xuICAgIHZhciBzdHIgPSAkKFwiI2ZuYW1lXCIpLnZhbCgpO1xuICAgIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG5cbn07XG5cbmZ1bmN0aW9uIGdldGxOYW1lKCkge1xuICAgIHZhciBzdHIgPSAkKFwiI2xuYW1lXCIpLnZhbCgpO1xuICAgIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG5cbn07XG5cbmZ1bmN0aW9uIGFyZVZhbHVlcygpIHtcbiAgICBpZiAoaWQgJiYgZm5hbWUgJiYgbG5hbWUgJiYgZGVwYXJ0bWVudCAmJiBpbWFnZSAmJiBlbWFpbCAmJiBwaG9uZSkge1xuICAgICAgICAkKFwiI3N1Ym1pdFwiKS5wcm9wKFwiZGlzYWJsZWRcIiwgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghaWQgfHwgIWZuYW1lIHx8ICFsbmFtZSB8fCAhZGVwYXJ0bWVudCB8fCAhaW1hZ2UgfHwgIWVtYWlsIHx8IHBob25lKSB7XG4gICAgICAgICAgICAkKFwiI3N1Ym1pdFwiKS5wcm9wKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5mdW5jdGlvbiBFbXBsb3llZSgpIHtcbiAgICB2YXIgZW1wbG95ZWUgPSB7XG4gICAgICAgIGlkLFxuICAgICAgICBmbmFtZSxcbiAgICAgICAgbG5hbWUsXG4gICAgICAgIGVtYWlsLFxuICAgICAgICBkZXBhcnRtZW50LFxuICAgICAgICBwaG9uZSxcbiAgICAgICAgaW1hZ2U6IFwiL2ltYWdlcy9cIiArIGltYWdlLFxuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICB9O1xuXG4gICAgcmV0dXJuIGVtcGxveWVlO1xufVxuXG5mdW5jdGlvbiBpbmplY3RFbXBsb3llZShlbXBsb3llZUlucHV0KSB7XG4gICAgdmFyIHVybCA9IFwiaW1hZ2VzL1wiICsgaW1hZ2U7XG4gICAgdmFyIG5ld0VtcGxveWVlID0gYDxkaXYgY2xhc3M9XCJpdGVtLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm92ZXJsYXlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZmlsZS1pbWFnZS1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9JHt1cmx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4ke2ZuYW1lfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwibG5hbWVcIj4ke2xuYW1lfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PiR7ZGVwYXJ0bWVudH08L2g0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNT4ke2VtYWlsfTwvaDU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2PiR7cGhvbmV9PC9oNj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiZGV0YWlsc1wiPmRldGFpbHM8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9JHt1cmx9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiB2YWx1ZT0ke2VtcGxveWVlSW5wdXQuaWR9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XG5cbiAgICAkKFwiLnJvd1wiKS5hcHBlbmQobmV3RW1wbG95ZWUpO1xufTtcblxuZnVuY3Rpb24gZ2V0RW1wbG95ZWVEYXRhKG1vZGFsSWQpIHtcblx0dmFyIGVtcGxveWVlRGF0YTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGVtcGxveWVlTGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdGlmIChlbXBsb3llZUxpc3RbaV0uaWQgPT09IG1vZGFsSWQpIHtcblx0XHRcdGVtcGxveWVlRGF0YSA9IGVtcGxveWVlTGlzdFtpXTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGVtcGxveWVlRGF0YTtcbiAgICAgICAgXG59XG5cbmZ1bmN0aW9uIG9wZW5Nb2RhbChtb2RhbElkKSB7XG5cdHZhciBlbXBsb3llZURhdGEgPSBnZXRFbXBsb3llZURhdGEobW9kYWxJZCk7XG5cdGNvbnNvbGUubG9nKGVtcGxveWVlRGF0YSk7XG4gICAgXG4gICAgdmFyIG1vZGFsRW1wbG95ZWUgPSBgPHNlY3Rpb24gY2xhc3M9XCJtb2RhbFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbWFnZS1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSR7ZW1wbG95ZWVEYXRhLmltYWdlfT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbXBsb3llZS1pbmZvcm1hdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwibW9kYWwtZm5hbWVcIj4ke2VtcGxveWVlRGF0YS5mbmFtZX08L2gyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPVwibW9kYWwtbG5hbWVcIj4ke2VtcGxveWVlRGF0YS5sbmFtZX08L2gyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPiR7ZW1wbG95ZWVEYXRhLmRlcGFydG1lbnR9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz4ke2VtcGxveWVlRGF0YS5lbWFpbH08L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPiR7ZW1wbG95ZWVEYXRhLnBob25lfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD4ke2VtcGxveWVlRGF0YS5kZXNjcmlwdGlvbn08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvbnNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx0PGJ1dHRvbiBjbGFzcz1cImFjdGlvbi1idG4gZXhwb3J0XCI+ZXhwb3J0PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICBcdDxidXR0b24gY2xhc3M9XCJhY3Rpb24tYnRuIHByaW50XCI+cHJpbnQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFx0PGJ1dHRvbiBjbGFzcz1cImFjdGlvbi1idG4gZGVsZXRlXCI+ZGVsZXRlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9XCJjbG9zZS1tb2RhbFwiPmNsb3NlPC9idXR0b24+XG4gICAgICAgICAgICA8L3NlY3Rpb24+YFxuXG4gICAgJChcIm1haW5cIikuYXBwZW5kKG1vZGFsRW1wbG95ZWUpO1xufTtcblxuXG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7XG4gICAgJChcInNlY3Rpb25cIikucmVtb3ZlKFwiLm1vZGFsXCIpO1xufTsiXX0=
